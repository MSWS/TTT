name: Nightly
on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'TTT/**'
      - '.github/workflows/nightly.yml'
      - '.github/workflows/release.yml'
  schedule:
    - cron: '15 0 * * 3' # Every Wednesday at 00:15 UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          show-progress: true

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v4.0.1
        with:
          versionSpec: '6.3.x'

      - name: Run GitVersion
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v4.0.1

      - name: Output Version to Summary
        run: "echo \"## GitVersion: ${{ steps.gitversion.outputs.fullSemVer }}\" >> $GITHUB_STEP_SUMMARY"

      - name: Build Locale
        run: |
          mkdir -p build/TTT/lang
          dotnet restore Locale/Locale.csproj
          dotnet build Locale/Locale.csproj --no-restore -c Release
          cp lang/*.json build/TTT/lang
          
      - name: Copy Gamedata
        run: |
          mkdir -p build/TTT/gamedata
          cp -r TTT/CS2/gamedata/* build/TTT/gamedata

      - name: Publish Plugin
        run: |
          dotnet restore TTT/Plugin/Plugin.csproj
          if [ "${GITHUB_REF##*/}" = "dev" ]; then
            dotnet publish TTT/Plugin/Plugin.csproj --no-restore -c Debug -o build/TTT
          elif [ "${GITHUB_REF##*/}" = "main" ]; then
            dotnet publish TTT/Plugin/Plugin.csproj --no-restore -c Release -o build/TTT
          else
            echo "Branch not recognized, skipping publish."
            exit 0
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TTT
          path: build/TTT
          if-no-files-found: error

  post_webhook:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: POST Webhook
        run: |
          curl -X POST \
            --fail \
            -F token=${{ secrets.GITLAB_SECRET_TOKEN }} \
            -F ref=dev \
            https://gitlab.edgegamers.io/api/v4/projects/2640/trigger/pipeline