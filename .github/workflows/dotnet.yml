name: .NET Build and Test
on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'TTT.*/**'
      - '.github/workflows/dotnet.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          show-progress: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          show-progress: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Run tests
        run: "dotnet run --no-build --no-restore --project TTT.Test/TTT.Test.csproj -- --coverage --coverage-output ../../../../coverage.xml --coverage-output-format cobertura"
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        if: ${{ matrix.dotnet-version == '9.0.x' }}
        with:
          filename: 'TTT.Test/coverage.xml'
          badge: true
          format: 'markdown'
          output: 'both'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && matrix.dotnet-version == '9.0.x'
        with:
          recreate: true
          path: code-coverage-results.md
      - name: Export Code Coverage
        if: ${{ matrix.dotnet-version == '9.0.x' }}
        run: echo "CODE_COVERAGE=$(tail -n 1 code-coverage-results.md | grep -oP '(?<=\*\*Summary\*\* \|\s\*\*)[0-9]+(?=%)')" >> $GITHUB_ENV
      - name: Create Test Coverage Badge
        uses: Schneegans/dynamic-badges-action@v1.7.0
        id: create_coverage_badge
        if: github.ref_name == 'main'
        with:
          auth: ${{ secrets.GIST_AUTH_TOKEN }}
          gistID: 6289e1f34da3b70fbba5f84f5ffb25a1
          filename: code-coverage.json
          label: 'Code Coverage'
          message: ${{ env.CODE_COVERAGE }}%
          valColorRange: ${{ env.CODE_COVERAGE }}
          maxColorRange: 100
          minColorRange: 33